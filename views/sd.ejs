<link rel="stylesheet" href="style.css">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1" />

<form class="sdsubmitbox" action="/sd-submit" method="POST">
    <input type="text" id="prompt" name="prompt" value= "<%= prompt %>" placeholder="Prompt"><br><br>
    <input type="text" id="negprompt" name="negprompt" value= "<%= negprompt %>" placeholder="Negative Prompt"><br><br>
    <button class="sd-button" type="submit">Submit</button>
</form>

<div class= "img-container" id="image-container">
    <img src="uploads/<%= lastimg %>" alt="Generated Image" class="image">
</div>

<label for="model-names">Choose Model:</label> 
<select name="model-names" id="model-names" onchange="sendOption()">
    <option value="juggernautXL_version6Rundiffusion">juggernautXL</option> 
    <option value="sd_xl_base_1.0">sd_xl_base</option> 
    <option value="revAnimated_v122EOL">revAnimated</option> 
</select>

<script>
    function sendOption() {
        const selectElement = document.getElementById('model-names');
        const selectedOption = selectElement.value;

        fetch('/setModel', {
            method: 'POST',
            body: JSON.stringify({ option: selectedOption }),
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => response.json())
        .then(data => {
            // Handle the response from the server
        })
        .catch(error => {
            // Handle any errors
        });
    }
</script>

<script>
    document.addEventListener('DOMContentLoaded', (event) => {
    const eventSource = new EventSource('/sd-events');

    eventSource.onmessage = function(event) {
        const data = JSON.parse(event.data);
        const imgElement = document.createElement('img');
        imgElement.src = `uploads/${data.imagepath}`;
        imgElement.alt = 'Generated Image';
        imgElement.classList.add('image');

        imgElement.onload = function() {
            const imageContainer = document.getElementById('image-container');
            // Remove all existing children
            while (imageContainer.firstChild) {
                imageContainer.removeChild(imageContainer.firstChild);
            }
            // Append the new image
            imageContainer.appendChild(imgElement);
        };
    };
});
</script>

